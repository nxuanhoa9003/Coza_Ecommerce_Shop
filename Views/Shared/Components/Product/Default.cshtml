@using System.Globalization
@model Coza_Ecommerce_Shop.ViewModels.Home.ProductOverViewVM

@functions {
    string BuildPageUrl(int? page = null,string? slug = null, string? search = null, int? minPrice = null, int? maxPrice = null, string? sort = null)
    {
        var queryParams = new Dictionary<string, object?>
        {
            { "page", page ?? Model.page },
            { "slug",  slug ?? Model.pagingViewModel.Slug },
            { "search", search ?? Model.pagingViewModel.SearchTerm },
            { "minPrice", minPrice ?? Model.pagingViewModel.PriceMin },
            { "maxPrice", maxPrice ?? Model.pagingViewModel.PriceMax },
            { "sort", sort ?? Model.pagingViewModel.SortOrder }
        };

        return Url.Action(null, queryParams);
    }
}

@{
    var Categories = Model.categories;
    var Products = Model.products;
    var controllerName = ViewContext.RouteData.Values["controller"]?.ToString() ?? "Home";
    
    var sortOrder = Model.pagingViewModel?.SortOrder?.ToLower();
}

<div class="flex-w flex-sb-m p-b-52">
    <div class="flex-w flex-l-m m-tb-10">
        <button class="all-product-btn stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 how-active1">
            All Products
        </button>

        @foreach (var item in Categories)
        {
            <a href="@BuildPageUrl(slug: item.Slug)" class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5">
                @item.Title
            </a>
        }
       
    </div>

    <!-- filter box-->
    @if (controllerName.ToLower() == "product")
    {

        <div class="flex-w flex-c-m m-tb-10">
            <div class="flex-c-m stext-106 cl6 size-104 bor4 pointer hov-btn3 trans-04 m-r-8 m-tb-4 js-show-filter">
                <i class="icon-filter cl2 m-r-6 fs-15 trans-04 zmdi zmdi-filter-list"></i>
                <i class="icon-close-filter cl2 m-r-6 fs-15 trans-04 zmdi zmdi-close dis-none"></i>
                Filter
            </div>

            <div class="flex-c-m stext-106 cl6 size-105 bor4 pointer hov-btn3 trans-04 m-tb-4 js-show-search">
                <i class="icon-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-search"></i>
                <i class="icon-close-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-close dis-none"></i>
                Search
            </div>
        </div>

        <!-- Search product -->
        
        <div class="dis-none panel-search w-full p-t-10 p-b-15">
            <form asp-controller="Product" asp-action="ListProduct" method="get">
                <div class="bor8 dis-flex p-l-15">
                    <button type="submit" class="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04">
                        <i class="zmdi zmdi-search"></i>
                    </button>

                    <input type="hidden" name="page" value="@Model.page">
                    <input type="hidden" name="slug" value="@Model.pagingViewModel?.Slug">
                    <input class="mtext-107 cl2 size-114 plh2 p-r-15" value="@Model.pagingViewModel?.SearchTerm" type="text" name="search" placeholder="Search">
                    <input type="hidden" name="minPrice" value="@Model.pagingViewModel?.PriceMin">
                    <input type="hidden" name="maxPrice" value="@Model.pagingViewModel?.PriceMax">
                    <input type="hidden" name="sort" value="@Model.pagingViewModel?.SortOrder">

                </div>
            </form>
        </div>

        <!-- Filter -->
        <div class="dis-none panel-filter w-full p-t-10">
            <div class="wrap-filter flex-w bg6 w-full p-lr-40 p-t-27 p-lr-15-sm">
                <div class="filter-col1 p-r-15 p-b-27">
                    <div class="mtext-102 cl2 p-b-15">
                        Sort By
                    </div>

                    <ul>

                        <li class="p-b-6">
                            <a href="@BuildPageUrl(sort: "default")" class="filter-link stext-106 trans-04 @(sortOrder == "default" || string.IsNullOrEmpty(sortOrder) ? "filter-link-active" : "")">
                                Mặc định
                            </a>
                        </li>
                        <li class="p-b-6">
                            <a href="@BuildPageUrl(sort: "newest")" class="filter-link stext-106 trans-04 @(sortOrder == "newest" ? "filter-link-active" : "")">
                                Mới nhất
                            </a>
                        </li>

                        <li class="p-b-6">
                            <a href="@BuildPageUrl(sort: "price-desc")" class="filter-link stext-106 trans-04 @(sortOrder == "price-desc" ? "filter-link-active" : "")">
                                Giá giảm dần
                            </a>
                        </li>

                        <li class="p-b-6">
                            <a href="@BuildPageUrl(sort: "price-asc")" class="filter-link stext-106 trans-04 @(sortOrder == "price-asc" ? "filter-link-active" : "")">
                                Giá tăng dần
                            </a>
                        </li>
                    </ul>
                </div>

                <div class="filter-col2 p-r-15 p-b-27">
                    <div class="mtext-102 cl2 p-b-15">
                        Price
                    </div>
                    
                    <form asp-controller="Product" asp-action="ListProduct" method="get">

                        <input type="hidden" name="page" value="@Model.page">
                        <input type="hidden" name="slug" value="@Model.pagingViewModel?.Slug">
                        <input type="hidden" name="search" value="@Model.pagingViewModel?.SearchTerm">


                        <div class="range-slider">
                            <input type="range" id="min-price" name="minPrice" min="0" max="2000000" step="10000" value="@(Model.pagingViewModel.PriceMin ?? 0)">
                            <input type="range" id="max-price" name="maxPrice" min="0" max="2000000" step="10000" value="@(Model.pagingViewModel.PriceMax ?? 2000000)">
                            <div class="slider-track"></div>
                        </div>

                        <input type="hidden" name="sort" value="@Model.pagingViewModel?.SortOrder">


                        <div class="price-values">
                            <span id="min-value">0đ</span>
                            <span id="max-value">2,000,000đ</span>
                        </div>

                      
                        <button type="submit" class="btn btn-filter mt-3">
                            <i class="zmdi zmdi-filter-list"></i> Lọc
                        </button>
                    </form>

                    
                </div>

                <div class="filter-col3 p-b-27">
                    <div class="mtext-102 cl2 p-b-15">
                        Tags
                    </div>

                    <div class="flex-w p-t-4 m-r--5">
                        <a href="#" class="flex-c-m stext-107 cl6 size-301 bor7 p-lr-15 hov-tag1 trans-04 m-r-5 m-b-5">
                            Fashion
                        </a>

                        <a href="#" class="flex-c-m stext-107 cl6 size-301 bor7 p-lr-15 hov-tag1 trans-04 m-r-5 m-b-5">
                            Lifestyle
                        </a>

                        <a href="#" class="flex-c-m stext-107 cl6 size-301 bor7 p-lr-15 hov-tag1 trans-04 m-r-5 m-b-5">
                            Denim
                        </a>

                        <a href="#" class="flex-c-m stext-107 cl6 size-301 bor7 p-lr-15 hov-tag1 trans-04 m-r-5 m-b-5">
                            Streetstyle
                        </a>

                        <a href="#" class="flex-c-m stext-107 cl6 size-301 bor7 p-lr-15 hov-tag1 trans-04 m-r-5 m-b-5">
                            Crafts
                        </a>
                    </div>
                </div>

            </div>
        </div>
    }
</div>




<div class="row isotope-grid product-container">
    @foreach (var product in Products)
    {
        var productDefault = product.Variants.FirstOrDefault(x => x.IsDefault);
        if (productDefault == null)
        {
            productDefault = product.Variants.First();
        }
        var basePrice = (productDefault.BasePrice != null ? productDefault.BasePrice?.ToString("#,0", new CultureInfo("vi-VN")) : "0") + "đ";
        <div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item">
            <!-- Block2 -->
            <div class="block2">
                <div class="block2-pic hov-img0">
                    <img src="@product.Image" alt="IMG-PRODUCT">
                    <a href="#" data-id="@product.Id" class="quick-order-btn block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1">
                        Quick View
                    </a>
                </div>

                <div class="block2-txt flex-w flex-t p-t-14">
                    <div class="block2-txt-child1 flex-col-l ">
                        <a asp-controller="Product" asp-action="ProductDetail" asp-route-slug="@product.Slug" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
                            @product.Title
                        </a>

                        <span class="stext-105 cl3">
                            @basePrice
                        </span>
                    </div>

                    <div class="block2-txt-child2 flex-r p-t-3">
                        <a href="#" class="btn-addwish-b2 dis-block pos-relative js-addwish-b2">
                            <img class="icon-heart1 dis-block trans-04" src="~/assets/images/icons/icon-heart-01.png" alt="ICON">
                            <img class="icon-heart2 dis-block trans-04 ab-t-l" src="~/assets/images/icons/icon-heart-02.png" alt="ICON">
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>



@if (controllerName.ToLower() == "product")
{
    @await Component.InvokeAsync("UserPaging", new { model = Model.pagingViewModel })
}



