
<script>
    $(document).ready(function () {
        $('#Detail').summernote();
    });


    function attachRadioEvent() {
        document.querySelectorAll('.variant-radio').forEach(radio => {
            radio.addEventListener('click', function () {
                uncheckOthers(this);
            });
        });
    }


    function updateIsActive(checkbox) {
            checkbox.value = checkbox.checked.toString();
    }

    function uncheckOthers(clickedRadio) {
            const radios = document.querySelectorAll('.variant-radio');
            clickedRadio.value = 'true'; // Đặt giá trị cho radio button được chọn
            radios.forEach(radio => {
                if (radio !== clickedRadio) {
                    radio.checked = false; // Hủy chọn các radio button khác
                    radio.nextElementSibling.value = "false";
                }
            });

            clickedRadio.nextElementSibling.value = "true";
    }

    const btnTabs = document.querySelectorAll(".btn-tab");

    btnTabs.forEach(btn => {
        btn.addEventListener("click", function () {

            btnTabs.forEach(nav => nav.classList.remove("actives", "active"));

            this.classList.add("actives");
        });
    });

    // upload images
    $(document).ready(function () {
        const previewContainer = $('#imagePreview');
        const fileInput = $('#formValidationFile');
        const hiddenCheckedImage = $('#checkedImage');
        const deletedImagesInput = $('#deleted-image-ids');

        // Xử lý khi thêm ảnh mới từ input file
        fileInput.on('change', function (event) {
            const files = Array.from(event.target.files); // Lấy danh sách file đã chọn
            const dataTransfer = new DataTransfer(); // Đối tượng để cập nhật danh sách file

            files.forEach((file, index) => {
                const reader = new FileReader();

                reader.onload = function (e) {
                    // Tạo thẻ img
                    const img = $('<img>', {
                        src: e.target.result,
                        'data-filename': file.name,
                        class: 'col-4 mb-3',
                        css: { maxWidth: '100%' }
                    });

                    // Tạo radio button
                    const radio = $('<input>', {
                        type: 'radio',
                        name: 'imageRep',
                        value: file.name,
                        id: `radio-new-${index}`,
                    }).addClass('me-2');

                    const label = $('<label>', {
                        for: `radio-new-${index}`,
                        text: 'Chọn ảnh này làm đại diện',
                    });

                    const radioContainer = $('<div>').append(radio).append(label);

                    // Tạo nút xóa
                    const removeBtn = $('<button>', {
                        type: 'button',
                        class: 'btn btn-danger btn-sm mt-2',
                        text: 'Xóa',
                        click: function () {
                            const col = $(this).closest('.col-3');
                            const fileName = col.find('img').data('filename');

                            col.remove(); // Xóa ảnh khỏi giao diện

                            // Lọc lại danh sách file không bị xóa
                            const remainingFiles = files.filter(f =>
                                previewContainer.find(`img[data-filename="${f.name}"]`).length > 0
                            );

                            // Cập nhật DataTransfer
                            dataTransfer.items.clear();
                            remainingFiles.forEach(f => dataTransfer.items.add(f));

                            // Cập nhật lại input file
                            fileInput[0].files = dataTransfer.files;

                            // Nếu ảnh bị xóa là ảnh đại diện, chọn ảnh đầu tiên còn lại
                            if (hiddenCheckedImage.val() === fileName) {
                                const firstRadio = previewContainer.find('input[name="imageRep"]').first();
                                if (firstRadio.length) {
                                    firstRadio.prop('checked', true).trigger('change');
                                } else {
                                    hiddenCheckedImage.val('');
                                }
                            }
                        }
                    });

                    // Gộp thành một col chứa img, radio và nút xóa
                    const col = $('<div>', { class: 'col-3 mb-3' })
                        .append(img)
                        .append(radioContainer)
                        .append(removeBtn);

                    previewContainer.append(col);
                };

                reader.readAsDataURL(file); // Đọc file dưới dạng URL

                // Thêm file vào DataTransfer để đảm bảo đồng bộ input file
                dataTransfer.items.add(file);
            });

            // Cập nhật lại input file
            fileInput[0].files = dataTransfer.files;

            // Cập nhật ảnh đại diện mặc định
            if (!hiddenCheckedImage.val()) {
                hiddenCheckedImage.val(files[0]?.name || '');
            }
        });

        // Xử lý khi xóa ảnh có sẵn
        previewContainer.on('click', '.btn-delete-img', function () {
            const button = $(this);
            const imageId = button.data('id');
            const imageItem = button.closest('.image-item');
            const radio = imageItem.find('input[name="imageRep"]');

            // Thêm ID vào input hidden
            deletedImagesInput.val(deletedImagesInput.val() + imageId + ',');

            // Kiểm tra nếu ảnh bị xóa là ảnh đại diện
            if (radio.prop('checked')) {
                const remainingRadios = previewContainer.find('input[name="imageRep"]:not(:checked)');
                if (remainingRadios.length > 0) {
                    remainingRadios.first().prop('checked', true).trigger('change');
                } else {
                    hiddenCheckedImage.val('');
                }
            }

            // Xóa ảnh khỏi giao diện
            imageItem.remove();
        });

        // Cập nhật giá trị input hidden khi thay đổi radio
        previewContainer.on('change', 'input[name="imageRep"]', function () {
            hiddenCheckedImage.val($(this).val());
        });
    });
    // end upload images

    $(document).ready(function () {
    // Sự kiện khi nhấn nút "Thêm biến thể"
        $('#addVariant').click(function () {
            const variantsTable = $('#variantsTable tbody');
            const index = variantsTable.find('tr').length; 
            // Tạo một hàng mới
            const newRow = $('<tr>');

            newRow.html(`
                <td><input type="text" name="Variants[${index}].Color" required></td>
                <td><input type="text" name="Variants[${index}].Size" required></td>
                <td><input type="number" name="Variants[${index}].BasePrice" required></td>
                <td><input type="number" name="Variants[${index}].PriceSale" required></td>
                <td><input type="number" name="Variants[${index}].Quantity" required></td>
                <td class="text-center">
                    <input type="radio" class="form-check-input variant-radio" name="Variants.IsDefault" value="${index}">
                    <input type="hidden" name="Variants[${index}].IsDefault" value="false"> <!-- Input ẩn -->
                </td>
                <td></td>
                <td class="text-center"><button type="button" class="removeVariant btn btn-danger btn-sm">Xóa</button></td>
            `);

            // Thêm hàng vào bảng
            variantsTable.append(newRow);


            attachRadioEvent();


            // Sự kiện xóa hàng
            newRow.find('.removeVariant').click(function () {
                newRow.remove();
            });

            newRow.find('.variant-radio').click(function () {
                 $('.variant-radio').prop('checked', false); // Bỏ chọn tất cả radio khác
                 $(this).prop('checked', true); // Chỉ chọn radio hiện tại
             });

        });

        attachRadioEvent();

    });

</script>
